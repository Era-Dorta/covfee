"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[533],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return n?a.createElement(m,r(r({ref:t},p),{},{components:n})):a.createElement(m,r({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59177:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var a,o=n(87462),i=n(63366),r=(n(67294),n(3905)),s=["components"],l={title:"Getting Started"},c=void 0,p={unversionedId:"getting_started",id:"getting_started",isDocsHomePage:!1,title:"Getting Started",description:"This guide takes you through the process of creating a simple covfee experiment which gathers continuous data from subjects.",source:"@site/docs/getting_started.mdx",sourceDirName:".",slug:"/getting_started",permalink:"/docs/getting_started",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/getting_started.mdx",version:"current",frontMatter:{title:"Getting Started"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"HIT options",permalink:"/docs/hit_options"}},u=[{value:"1. Decribe your HITs",id:"1-decribe-your-hits",children:[]},{value:"2. Create the database",id:"2-create-the-database",children:[]},{value:"3. Run covfee",id:"3-run-covfee",children:[]},{value:"4. Annotate!",id:"4-annotate",children:[]}],d=(a="LinkTo",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}),f={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This guide takes you through the process of creating a simple covfee experiment which gathers continuous data from subjects."),(0,r.kt)("h2",{id:"1-decribe-your-hits"},"1. Decribe your HITs"),(0,r.kt)("p",null,"The easiest way to get started with covfee is to create a JSON file containing timelines or HITs. Each HIT is a set of tasks that are assigned to a single subject. Examples of tasks are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Picking multiple labels for a video"),(0,r.kt)("li",{parentName:"ul"},"Answering a personality test or survey"),(0,r.kt)("li",{parentName:"ul"},"Continuously annotating a video for arousal"),(0,r.kt)("li",{parentName:"ul"},"Continuously annotating the position of a hand in a video.")),(0,r.kt)("p",null,"You can see live examples of these tasks in the ",(0,r.kt)("a",{parentName:"p",href:"https://master--5faeef49f6655f00210dbf35.chromatic.com/"},"covfee documentation"),". HITs can be as simple as a single one of these tasks, or consist of multiple tasks of different types. You can also create your own custom tasks (see Custom Tasks). You are able to specify exactly what tasks are part of each HIT. covfee will produce a separate URL per HIT, which can be sent to a study participant. "),(0,r.kt)("p",null,"There are two types of HITs: timeline and annotation HITs."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Timeline HITs")," are a sequence of tasks, which must be completed in order by study subjects. Timeline HITs would normally be used for perception studies, where a subject must complete a series of tasks to complete participation. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Annotation HITs")," are a set of tasks in no particular order, and are meant to be used mainly for annotation of continuous variables. It is especially meant for use online with Mechanical Turk and similar platforms. An annotation HIT is used to annotate a single media file (all its tasks will refer to the same audio/video file). Predefined tasks can be set to be completed by annotators. Annotators can also be allowed to create and name their own tasks. These HITs will be rendered in an annotation interface where users can control the available continuous variables.")),(0,r.kt)("p",null,"A covfee project may contain one or multiple different HITs. A JSON file is the easiest way to specify your covfee project. You can find examples of such JSON files in the samples folder in github."),(0,r.kt)("p",null,"In this guide, we will create a project consisting of a single timeline HIT in which participants must:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"read general instructions for the whole experiment before seeing the data."),(0,r.kt)("li",{parentName:"ol"},"watch a video and afterwards indicate the arousal of the subject in it using a slider."),(0,r.kt)("li",{parentName:"ol"},"watch the same video and this time continuously (ie. while watching the video) annotate arousal by using their mouse to indicate a level in a scale.")),(0,r.kt)("p",null,"Our HIT therefore has 3 tasks."),(0,r.kt)("p",null,"First create a folder for your covfee project and write a file ",(0,r.kt)("inlineCode",{parentName:"p"},"example.covfee.json")," with the following content:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "name": "Local Audiovisual",\n  "email": "example@example.com",\n  "hits": [\n    {\n      "type": "timeline",\n      "tasks": [\n        ...\n      ]\n    }\n  ]\n}\n')),(0,r.kt)("p",null,"This is the skeleton of a covfee project and ",(0,r.kt)("inlineCode",{parentName:"p"},"example.covfee.json")," will contain the full specification of it. It starts with the ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"email")," of the contact person in charge of the study, which will be available to participants. The ",(0,r.kt)("inlineCode",{parentName:"p"},"hits")," section contains an object per HIT, in this case a single one. This HIT is a ",(0,r.kt)("inlineCode",{parentName:"p"},"timeline")," HIT with a set of tasks that we will specify next."),(0,r.kt)("p",null,"You can see the tasks available in covfee in the Tasks section of the documentation. We will start by specifying the instructions using ",(0,r.kt)("inlineCode",{parentName:"p"},"InstructionsTask")," (see ",(0,r.kt)(d,{kind:"tasks-instructions",story:"page",mdxType:"LinkTo"},"Instructions"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "type": "InstructionsTask",\n  "html": ""\n}\n')),(0,r.kt)("p",null,"Tasks like ",(0,r.kt)("inlineCode",{parentName:"p"},"InstructionsTask")," have each their own set of parameters that allow you to configure the task. ",(0,r.kt)("inlineCode",{parentName:"p"},"InstructionsTask"),", for example, allows you to pass the URL to a Markdown document with instructions instead of providing them directly. See ",(0,r.kt)(d,{kind:"tasks-instructions",story:"page",mdxType:"LinkTo"},"Instructions")," for more."),(0,r.kt)("p",null,"Second, we will add a task in which participants watch a video and then rate the arousal of the participant in it using a simple slider. To do this we will make use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"QuestionnaireTask")," (see ",(0,r.kt)(d,{kind:"questionnaire",story:"page",mdxType:"LinkTo"},"Questionnaire"),"), which supports many form elements including sliders:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "type": "QuestionnaireTask",\n  "media": {\n    \n  },\n  "form": [\n      {\n        "prompt": "Level of arousal",\n        "type": "Slider"\n      }\n  ]\n}\n')),(0,r.kt)("p",null,"Form elements are very common in any kind of annotation. Covfee allows you to use much more than sliders by supporting most of the ",(0,r.kt)("a",{parentName:"p",href:"https://ant.design/components/overview/"},"data entry components of the ant.design library"),"."),(0,r.kt)("p",null,"What if you want to use a video in your computer that is not hosted anywhere? Simply add a folder named ",(0,r.kt)("inlineCode",{parentName:"p"},"media")," to your project folder, next to your ",(0,r.kt)("inlineCode",{parentName:"p"},".covfee.json")," file and paste your video there. Then simply specify the video filename (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"myvideo.mp4"),") as ",(0,r.kt)("inlineCode",{parentName:"p"},"url"),". Covfee will take care of serving your media from this folder."),(0,r.kt)("p",null,"Finally, we will add a continuous task in which subjects must continuously annotate a one dimensional variable: the arousal of the subject in the video:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "type": "QuestionnaireTask",\n  "form": [\n      {\n        "prompt": "Level of arousal",\n        "type": "Slider"\n      }\n  ]\n}\n')),(0,r.kt)("p",null,"By now, your project folder should look more or less like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"myproject\n    example.covfee.json\n    media\n        myvideo.mp4\n")),(0,r.kt)("h2",{id:"2-create-the-database"},"2. Create the database"),(0,r.kt)("p",null,"covfee uses the previous JSON specification to create a database that will store the responses to the tasks. "),(0,r.kt)("p",null,"All you need to do now is ",(0,r.kt)("inlineCode",{parentName:"p"},"cd")," to your project folder and run covfee from it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd myproject\ncovfee-maker .\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"covfee-maker")," will read all the ",(0,r.kt)("inlineCode",{parentName:"p"},".covfee.json")," files in the passed folder and initialize a database for covfee."),(0,r.kt)("h2",{id:"3-run-covfee"},"3. Run covfee"),(0,r.kt)("p",null,"Run the following two commands in separate terminals. Both should be run from your project directory (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"samples/basic"),")"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"covfee-webpack\ncovfee-dev\n")),(0,r.kt)("h2",{id:"4-annotate"},"4. Annotate!"),(0,r.kt)("p",null,"Running ",(0,r.kt)("inlineCode",{parentName:"p"},"covfee-maker")," should have given you an output such as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Example project\nID: c721d8b7f0722ae0f575a8725609e46b1e9421e125dcfa471dc5ebd14e188fb1\n - url: http://127.0.0.1:5000/#/timelines/ebf503d58b3e5a2fb81c22d822d80f1b98d402a44a0c96e04d8f91b2cf531df7\n - api: http://127.0.0.1:5000/api/timelines/ebf503d58b3e5a2fb81c22d822d80f1b98d402a44a0c96e04d8f91b2cf531df7\n")),(0,r.kt)("p",null,"This will contain in general one URL per hit. These are the URLs that you should send to your workers or collaborators. Try opening the first URL in your browser! This should display the HIT you described."))}m.isMDXComponent=!0}}]);